var global=window;!function(root,factory){"object"==typeof exports?factory(module.exports):"function"==typeof define&&define.amd?define([],function(){return factory(root)}):factory(root)}(this,function(root){"use strict";var categoriesDepsOrder=["extensions","buffers","bufferViews","images","videos","samplers","textures","shaders","programs","techniques","materials","accessors","meshes","cameras","lights","skins","nodes","animations","scenes"],glTFParser=Object.create(Object.prototype,{_rootDescription:{value:null,writable:!0},rootDescription:{set:function(value){this._rootDescription=value},get:function(){return this._rootDescription}},baseURL:{value:null,writable:!0},_isAbsolutePath:{value:function(path){var isAbsolutePathRegExp=new RegExp("^"+window.location.protocol,"i");return!!path.match(isAbsolutePathRegExp)}},resolvePathIfNeeded:{value:function(path){if(this._isAbsolutePath(path))return path;var isDataUriRegex=/^data:/;return isDataUriRegex.test(path)?path:this.baseURL+path}},_resolvePathsForCategories:{value:function(categories){categories.forEach(function(category){var descriptions=this.json[category];if(descriptions){var descriptionKeys=Object.keys(descriptions);descriptionKeys.forEach(function(descriptionKey){var description=descriptions[descriptionKey];description.uri=this.resolvePathIfNeeded(description.uri)},this)}},this)}},_json:{value:null,writable:!0},json:{enumerable:!0,get:function(){return this._json},set:function(value){this._json!==value&&(this._json=value,this._resolvePathsForCategories(["buffers","shaders","images","videos"]))}},_path:{value:null,writable:!0},getEntryDescription:{value:function(entryID,entryType){var entries=null,category=entryType;return entries=this.rootDescription[category],entries?entries?entries[entryID]:null:(console.log("ERROR:CANNOT find expected category named:"+category),null)}},_stepToNextCategory:{value:function(){return this._state.categoryIndex=this.getNextCategoryIndex(this._state.categoryIndex+1),this._state.categoryIndex!==-1&&(this._state.categoryState.index=0,!0)}},_stepToNextDescription:{enumerable:!1,value:function(){var categoryState=this._state.categoryState,keys=categoryState.keys;return keys?(categoryState.index++,categoryState.keys=null,categoryState.index>=keys.length&&this._stepToNextCategory()):(console.log("INCONSISTENCY ERROR"),!1)}},hasCategory:{value:function(category){return!!this.rootDescription[category]}},_handleState:{value:function(){for(var methodForType={buffers:this.handleBuffer,bufferViews:this.handleBufferView,shaders:this.handleShader,programs:this.handleProgram,techniques:this.handleTechnique,materials:this.handleMaterial,meshes:this.handleMesh,cameras:this.handleCamera,lights:this.handleLight,nodes:this.handleNode,scenes:this.handleScene,images:this.handleImage,animations:this.handleAnimation,accessors:this.handleAccessor,skins:this.handleSkin,samplers:this.handleSampler,textures:this.handleTexture,videos:this.handleVideo,extensions:this.handleExtension},success=!0;this._state.categoryIndex!==-1;){var category=categoriesDepsOrder[this._state.categoryIndex],categoryState=this._state.categoryState,keys=categoryState.keys;if(keys||(categoryState.keys=keys=Object.keys(this.rootDescription[category]),!keys||0!=keys.length)){var type=category,entryID=keys[categoryState.index],description=this.getEntryDescription(entryID,type);if(description){if(methodForType[type]&&methodForType[type].call(this,entryID,description,this._state.userInfo)===!1){success=!1;break}this._stepToNextDescription()}else if(this.handleError){this.handleError("INCONSISTENCY ERROR: no description found for entry "+entryID),success=!1;break}}else this._stepToNextDescription()}this.handleLoadCompleted&&this.handleLoadCompleted(success)}},_loadJSONIfNeeded:{enumerable:!0,value:function(callback){var self=this;if(this._json)callback&&callback(this.json);else{var jsonPath=this._path,i=jsonPath.lastIndexOf("/");this.baseURL=0!==i?jsonPath.substring(0,i+1):"";var jsonfile=new XMLHttpRequest;jsonfile.open("GET",jsonPath,!0),jsonfile.onreadystatechange=function(){4==jsonfile.readyState&&200==jsonfile.status&&(self.json=JSON.parse(jsonfile.responseText),callback&&callback(self.json))},jsonfile.send(null)}}},_buildLoader:{value:function(callback){function JSONReady(json){self.rootDescription=json,callback&&callback(this)}var self=this;this._loadJSONIfNeeded(JSONReady)}},_state:{value:null,writable:!0},_getEntryType:{value:function(entryID){for(var rootKeys=categoriesDepsOrder,i=0;i<rootKeys.length;i++){var rootValues=this.rootDescription[rootKeys[i]];if(rootValues)return rootKeys[i]}return null}},getNextCategoryIndex:{value:function(currentIndex){for(var i=currentIndex;i<categoriesDepsOrder.length;i++)if(this.hasCategory(categoriesDepsOrder[i]))return i;return-1}},load:{enumerable:!0,value:function(userInfo,options){var self=this;this._buildLoader(function(reader){var startCategory=self.getNextCategoryIndex.call(self,0);startCategory!==-1&&(self._state={userInfo:userInfo,options:options,categoryIndex:startCategory,categoryState:{index:"0"}},self._handleState())})}},initWithPath:{value:function(path){return this._path=path,this._json=null,this}},_knownURLs:{writable:!0,value:{}},loaderContext:{value:function(){return"undefined"==typeof this._knownURLs[this._path]&&(this._knownURLs[this._path]=Object.keys(this._knownURLs).length),"__"+this._knownURLs[this._path]}},initWithJSON:{value:function(json,baseURL){return this.json=json,this.baseURL=baseURL,baseURL||console.log("WARNING: no base URL passed to Reader:initWithJSON"),this}}});return root&&(root.glTFParser=glTFParser),glTFParser}),THREE.glTFLoader=function(){this.meshesRequested=0,this.meshesLoaded=0,this.pendingMeshes=[],this.animationsRequested=0,this.animationsLoaded=0,this.animations=[],this.shadersRequested=0,this.shadersLoaded=0,this.shaders={},this.loadRequests=[],THREE.glTFShaders.removeAll(),THREE.Loader.call(this)},THREE.glTFLoader.prototype=new THREE.Loader,THREE.glTFLoader.prototype.constructor=THREE.glTFLoader,THREE.glTFLoader.prototype.load=function(url,callback){function RgbArraytoHex(colorArray){if(!colorArray)return 4294967295;var r=Math.floor(255*colorArray[0]),g=Math.floor(255*colorArray[1]),b=Math.floor(255*colorArray[2]),a=255,color=(a<<24)+(r<<16)+(g<<8)+b;return color}function componentsPerElementForGLType(type){switch(type){case"SCALAR":nElements=1;break;case"VEC2":nElements=2;break;case"VEC3":nElements=3;break;case"VEC4":nElements=4;break;case"MAT2":nElements=4;break;case"MAT3":nElements=9;break;case"MAT4":nElements=16}return nElements}function replaceShaderDefinitions(shader,material){var program=material.params.program,shaderParams=material.params.technique.parameters,shaderAttributes=material.params.technique.attributes,params={};for(var attribute in material.params.attributes){var pname=shaderAttributes[attribute],shaderParam=shaderParams[pname],semantic=shaderParam.semantic;semantic&&(params[attribute]=shaderParam)}var s=shader,r="";for(var pname in params){var param=params[pname],semantic=param.semantic;switch(r=eval("/"+pname+"/g"),semantic){case"POSITION":s=s.replace(r,"position");break;case"NORMAL":s=s.replace(r,"normal");break;case"TEXCOORD_0":s=s.replace(r,"uv");break;case"WEIGHT":s=s.replace(r,"skinWeight");break;case"JOINT":s=s.replace(r,"skinIndex")}}return s}function replaceShaderSemantics(material){var vertexShader=theLoader.shaders[material.params.vertexShader];vertexShader&&(vertexShader=replaceShaderDefinitions(vertexShader,material),theLoader.shaders[material.params.vertexShader]=vertexShader)}function createShaderMaterial(material){replaceShaderSemantics(material);var fragmentShader=theLoader.shaders[material.params.fragmentShader];if(!fragmentShader)return console.log("ERROR: Missing fragment shader definition:",material.params.fragmentShader),new THREE.MeshPhongMaterial;var vertexShader=theLoader.shaders[material.params.vertexShader];if(!vertexShader)return console.log("ERROR: Missing vertex shader definition:",material.params.vertexShader),new THREE.MeshPhongMaterial;var uniforms=THREE.UniformsUtils.clone(material.params.uniforms);for(uniform in material.params.uniforms){var src=material.params.uniforms[uniform],dst=uniforms[uniform];"t"==dst.type&&(dst.value=src.value)}var shaderMaterial=new THREE.RawShaderMaterial({fragmentShader:fragmentShader,vertexShader:vertexShader,uniforms:uniforms,transparent:material.params.transparent});return shaderMaterial}function LoadTexture(src){function decodeDataUriText(isBase64,data){var result=decodeURIComponent(data);return isBase64?atob(result):result}function decodeDataUriArrayBuffer(isBase64,data){for(var byteString=decodeDataUriText(isBase64,data),buffer=new ArrayBuffer(byteString.length),view=new Uint8Array(buffer),i=0;i<byteString.length;i++)view[i]=byteString.charCodeAt(i);return buffer}function decodeDataUri(dataUriRegexResult,responseType){responseType="undefined"!=typeof responseType?responseType:"";var mimeType=dataUriRegexResult[1],isBase64=!!dataUriRegexResult[2],data=dataUriRegexResult[3];switch(responseType){case"":case"text":return decodeDataUriText(isBase64,data);case"ArrayBuffer":return decodeDataUriArrayBuffer(isBase64,data);case"blob":var buffer=decodeDataUriArrayBuffer(isBase64,data);return new Blob([buffer],{type:mimeType});case"document":var parser=new DOMParser;return parser.parseFromString(decodeDataUriText(isBase64,data),mimeType);case"json":return JSON.parse(decodeDataUriText(isBase64,data));default:throw"Unhandled responseType: "+responseType}}if(!src)return null;var loadImage=function(url,success,error){var image=new Image;image.onload=function(){success(image)},"undefined"!=typeof error&&(image.onerror=error),image.src=url},dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/,dataUriRegexResult=dataUriRegex.exec(src);if(null!==dataUriRegexResult){var texture=new THREE.Texture,blob=decodeDataUri(dataUriRegexResult,"blob"),blobUrl=window.URL.createObjectURL(blob);return loadImage(blobUrl,function(img){texture.image=img,texture.needsUpdate=!0}),texture}return(new THREE.TextureLoader).load(src)}function CreateTexture(resources,resource){var texturePath=null,textureParams=null;if(resource){var texture=resource;if(texture){var textureEntry=resources.getEntry(texture);if(textureEntry){var imageEntry=resources.getEntry(textureEntry.description.source);imageEntry&&(texturePath=imageEntry.description.uri);var samplerEntry=resources.getEntry(textureEntry.description.sampler);samplerEntry&&(textureParams=samplerEntry.description)}}}var texture=LoadTexture(texturePath);return texture&&textureParams&&(textureParams.wrapS==WebGLRenderingContext.REPEAT&&(texture.wrapS=THREE.RepeatWrapping),textureParams.wrapT==WebGLRenderingContext.REPEAT&&(texture.wrapT=THREE.RepeatWrapping),textureParams.magFilter==WebGLRenderingContext.LINEAR&&(texture.magFilter=THREE.LinearFilter)),texture}var theLoader=this,ClassicGeometry=function(){this.geometry=new THREE.BufferGeometry,this.totalAttributes=0,this.loadedAttributes=0,this.indicesLoaded=!1,this.finished=!1,this.onload=null,this.uvs=null,this.indexArray=null};ClassicGeometry.prototype.constructor=ClassicGeometry,ClassicGeometry.prototype.buildBufferGeometry=function(){var geometry=this.geometry;geometry.setIndex(new THREE.BufferAttribute(this.indexArray,1));var offset={start:0,index:0,count:this.indexArray.length};geometry.groups.push(offset),geometry.computeBoundingSphere()},ClassicGeometry.prototype.checkFinished=function(){this.indexArray&&this.loadedAttributes===this.totalAttributes&&(this.buildBufferGeometry(),this.finished=!0,this.onload&&this.onload())};var IndicesDelegate=function(){};IndicesDelegate.prototype.handleError=function(errorCode,info){console.log("ERROR(IndicesDelegate):"+errorCode+":"+info)},IndicesDelegate.prototype.convert=function(resource,ctx){return new Uint16Array(resource,0,ctx.indices.count)},IndicesDelegate.prototype.resourceAvailable=function(glResource,ctx){var geometry=ctx.geometry;return geometry.indexArray=glResource,geometry.checkFinished(),!0};var indicesDelegate=new IndicesDelegate,IndicesContext=function(indices,geometry){this.indices=indices,this.geometry=geometry},VertexAttributeDelegate=function(){};VertexAttributeDelegate.prototype.handleError=function(errorCode,info){console.log("ERROR(VertexAttributeDelegate):"+errorCode+":"+info)},VertexAttributeDelegate.prototype.convert=function(resource,ctx){return resource},VertexAttributeDelegate.prototype.bufferResourceAvailable=function(glResource,ctx){var floatArray,i,nComponents,geom=ctx.geometry,attribute=ctx.attribute,semantic=ctx.semantic;if("POSITION"==semantic)floatArray=new Float32Array(glResource,0,attribute.count*componentsPerElementForGLType(attribute.type)),geom.geometry.addAttribute("position",new THREE.BufferAttribute(floatArray,3));else if("NORMAL"==semantic)nComponents=componentsPerElementForGLType(attribute.type),floatArray=new Float32Array(glResource,0,attribute.count*nComponents),geom.geometry.addAttribute("normal",new THREE.BufferAttribute(floatArray,3));else if("TEXCOORD_0"==semantic||"TEXCOORD"==semantic){for(nComponents=componentsPerElementForGLType(attribute.type),floatArray=new Float32Array(glResource,0,attribute.count*nComponents),i=0;i<floatArray.length/2;i++)floatArray[2*i+1]=1-floatArray[2*i+1];geom.geometry.addAttribute("uv",new THREE.BufferAttribute(floatArray,nComponents))}else"WEIGHT"==semantic?(nComponents=componentsPerElementForGLType(attribute.type),floatArray=new Float32Array(glResource,0,attribute.count*nComponents),geom.geometry.addAttribute("skinWeight",new THREE.BufferAttribute(floatArray,nComponents))):"JOINT"==semantic&&(nComponents=componentsPerElementForGLType(attribute.type),floatArray=new Float32Array(glResource,0,attribute.count*nComponents),geom.geometry.addAttribute("skinIndex",new THREE.BufferAttribute(floatArray,nComponents)))},VertexAttributeDelegate.prototype.resourceAvailable=function(glResource,ctx){this.bufferResourceAvailable(glResource,ctx);var geom=ctx.geometry;return geom.loadedAttributes++,geom.checkFinished(),!0};var vertexAttributeDelegate=new VertexAttributeDelegate,VertexAttributeContext=function(attribute,semantic,geometry){this.attribute=attribute,this.semantic=semantic,this.geometry=geometry},Mesh=function(){this.primitives=[],this.materialsPending=[],this.loadedGeometry=0,this.onCompleteCallbacks=[]};Mesh.prototype.addPrimitive=function(geometry,material){var self=this;geometry.onload=function(){self.loadedGeometry++,self.checkComplete()},this.primitives.push({geometry:geometry,material:material,mesh:null})},Mesh.prototype.onComplete=function(callback){this.onCompleteCallbacks.push(callback)},Mesh.prototype.checkComplete=function(){var self=this;this.onCompleteCallbacks.length&&this.primitives.length==this.loadedGeometry&&(this.onCompleteCallbacks.forEach(function(callback){callback(self)}),this.onCompleteCallbacks=[])},Mesh.prototype.attachToNode=function(threeNode){var that=this;this.primitives.forEach(function(primitive){var material=primitive.material,materialParams=material.params;if(material instanceof THREE.Material||(material=createShaderMaterial(material)),!that.skin){var threeMesh=new THREE.Mesh(primitive.geometry.geometry,material);if(threeMesh.castShadow=!0,threeNode.add(threeMesh),material instanceof THREE.ShaderMaterial){var glTFShader=new THREE.glTFShader(material,materialParams,threeMesh,theLoader.rootObj);THREE.glTFShaders.add(glTFShader)}}})};var Material=function(params){this.params=params},AnimationParameterDelegate=function(){};AnimationParameterDelegate.prototype.handleError=function(errorCode,info){console.log("ERROR(AnimationParameterDelegate):"+errorCode+":"+info)},AnimationParameterDelegate.prototype.convert=function(resource,ctx){var parameter=ctx.parameter,glResource=null;switch(parameter.type){case"SCALAR":case"VEC2":case"VEC3":case"VEC4":glResource=new Float32Array(resource,0,parameter.count*componentsPerElementForGLType(parameter.type))}return glResource},AnimationParameterDelegate.prototype.resourceAvailable=function(glResource,ctx){var animation=ctx.animation,parameter=ctx.parameter;return parameter.data=glResource,animation.handleParameterLoaded(parameter),!0};var animationParameterDelegate=new AnimationParameterDelegate,AnimationParameterContext=function(parameter,animation){this.parameter=parameter,this.animation=animation},Animation=function(){this.totalParameters=0,this.loadedParameters=0,this.parameters={},this.finishedLoading=!1,this.onload=null};Animation.prototype.constructor=Animation,Animation.prototype.handleParameterLoaded=function(parameter){this.parameters[parameter.name]=parameter,this.loadedParameters++,this.checkFinished()},Animation.prototype.checkFinished=function(){this.loadedParameters===this.totalParameters&&(this.finishedLoading=!0,this.onload&&this.onload())};var InverseBindMatricesDelegate=function(){};InverseBindMatricesDelegate.prototype.handleError=function(errorCode,info){console.log("ERROR(InverseBindMatricesDelegate):"+errorCode+":"+info)},InverseBindMatricesDelegate.prototype.convert=function(resource,ctx){var parameter=ctx.parameter,glResource=null;switch(parameter.type){case"MAT4":glResource=new Float32Array(resource,0,parameter.count*componentsPerElementForGLType(parameter.type))}return glResource},InverseBindMatricesDelegate.prototype.resourceAvailable=function(glResource,ctx){var skin=ctx.skin;return skin.inverseBindMatrices=glResource,!0};var inverseBindMatricesDelegate=new InverseBindMatricesDelegate,InverseBindMatricesContext=function(param,skin){this.parameter=param,this.skin=skin},ShaderDelegate=function(){};ShaderDelegate.prototype.handleError=function(errorCode,info){console.log("ERROR(ShaderDelegate):"+errorCode+":"+info)},ShaderDelegate.prototype.convert=function(resource,ctx){return resource},ShaderDelegate.prototype.resourceAvailable=function(data,ctx){return theLoader.shadersLoaded++,theLoader.shaders[ctx.id]=data,!0};var shaderDelegate=new ShaderDelegate,ShaderContext=function(id,path){this.id=id,this.uri=path},ResourceEntry=function(entryID,object,description){this.entryID=entryID,this.object=object,this.description=description},Resources=function(){this._entries={}};Resources.prototype.setEntry=function(entryID,object,description){return entryID?(this._entries[entryID]&&console.warn("entry["+entryID+"] is being overwritten"),void(this._entries[entryID]=new ResourceEntry(entryID,object,description))):void console.error("No EntryID provided, cannot store",description)},Resources.prototype.getEntry=function(entryID){return this._entries[entryID]},Resources.prototype.clearEntries=function(){this._entries={}},LoadDelegate=function(){},LoadDelegate.prototype.loadCompleted=function(callback,obj){callback.call(Window,obj)};var ThreeGLTFLoader=Object.create(glTFParser,{load:{enumerable:!0,value:function(userInfo,options){this.resources=new Resources,this.cameras=[],this.lights=[],this.animations=[],this.joints={},THREE.GLTFLoaderUtils.init(),glTFParser.load.call(this,userInfo,options)}},cameras:{enumerable:!0,writable:!0,value:[]},lights:{enumerable:!0,writable:!0,value:[]},animations:{enumerable:!0,writable:!0,value:[]},handleBuffer:{value:function(entryID,description,userInfo){return this.resources.setEntry(entryID,null,description),description.type="ArrayBuffer",!0}},handleBufferView:{value:function(entryID,description,userInfo){this.resources.setEntry(entryID,null,description);var buffer=this.resources.getEntry(description.buffer);description.type="ArrayBufferView";var bufferViewEntry=this.resources.getEntry(entryID);return bufferViewEntry.buffer=buffer,!0}},handleShader:{value:function(entryID,description,userInfo){this.resources.setEntry(entryID,null,description);var shaderRequest={id:entryID,uri:description.uri},shaderContext=new ShaderContext(entryID,description.uri);return theLoader.shadersRequested++,THREE.GLTFLoaderUtils.getFile(shaderRequest,shaderDelegate,shaderContext),!0}},handleProgram:{value:function(entryID,description,userInfo){return this.resources.setEntry(entryID,null,description),!0}},handleTechnique:{value:function(entryID,description,userInfo){return description.refCount=0,this.resources.setEntry(entryID,null,description),!0}},createShaderParams:{value:function(materialId,values,params,programID,technique){var program=this.resources.getEntry(programID);if(params.uniforms={},params.attributes={},params.program=program,params.technique=technique,program){params.fragmentShader=program.description.fragmentShader,params.vertexShader=program.description.vertexShader;for(var uniform in technique.uniforms){var uvalue,ulength,pname=technique.uniforms[uniform],shaderParam=technique.parameters[pname],ptype=shaderParam.type,pcount=shaderParam.count,value=values[pname],utype="";switch(ptype){case WebGLRenderingContext.FLOAT:if(utype="f",uvalue=shaderParam.value,"transparency"==pname){var USE_A_ONE=!0,opacity=USE_A_ONE?value:1-value;uvalue=opacity,params.transparent=!0}break;case WebGLRenderingContext.FLOAT_VEC2:if(utype="v2",uvalue=new THREE.Vector2,shaderParam&&shaderParam.value){var v2=shaderParam.value;uvalue.fromArray(v2)}value&&uvalue.fromArray(value);break;case WebGLRenderingContext.FLOAT_VEC3:if(utype="v3",uvalue=new THREE.Vector3,shaderParam&&shaderParam.value){var v3=shaderParam.value;uvalue.fromArray(v3)}value&&uvalue.fromArray(value);break;case WebGLRenderingContext.FLOAT_VEC4:if(utype="v4",uvalue=new THREE.Vector4,shaderParam&&shaderParam.value){var v4=shaderParam.value;uvalue.fromArray(v4)}value&&uvalue.fromArray(value);break;case WebGLRenderingContext.FLOAT_MAT2:console.log("Warning: FLOAT_MAT2");break;case WebGLRenderingContext.FLOAT_MAT3:if(utype="m3",uvalue=new THREE.Matrix3,shaderParam&&shaderParam.value){var m3=shaderParam.value;uvalue.fromArray(m3)}value&&uvalue.fromArray(value);break;case WebGLRenderingContext.FLOAT_MAT4:if(void 0!==pcount){utype="m4v",uvalue=new Array(pcount);for(var mi=0;mi<pcount;mi++)uvalue[mi]=new THREE.Matrix4;if(ulength=pcount,shaderParam&&shaderParam.value){var m4v=shaderParam.value;uvalue.fromArray(m4v)}value&&uvalue.fromArray(value)}else{if(utype="m4",uvalue=new THREE.Matrix4,shaderParam&&shaderParam.value){var m4=shaderParam.value;uvalue.fromArray(m4)}value&&uvalue.fromArray(value)}break;case WebGLRenderingContext.SAMPLER_2D:utype="t",uvalue=value?CreateTexture(this.resources,value):null;break;default:throw new Error("Unknown shader uniform param type: "+ptype+" - "+theLoader.idx[ptype])}var udecl={type:utype,value:uvalue,length:ulength};params.uniforms[uniform]=udecl}for(var attribute in technique.attributes){var pname=technique.attributes[attribute],param=technique.parameters[pname],atype=param.type,semantic=param.semantic,adecl={type:atype,semantic:semantic};params.attributes[attribute]=adecl}}}},threeJSMaterialType:{value:function(materialId,material,params){var values,extensions=material.extensions,khr_material=extensions?extensions.KHR_materials_common:null,materialType=null;if(khr_material){switch(khr_material.technique){case"BLINN":case"PHONG":materialType=THREE.MeshPhongMaterial;break;case"LAMBERT":materialType=THREE.MeshLambertMaterial;break;case"CONSTANT":default:materialType=THREE.MeshBasicMaterial}khr_material.doubleSided&&(params.side=THREE.DoubleSide),khr_material.transparent&&(params.transparent=!0),values={};for(prop in khr_material.values)values[prop]=khr_material.values[prop]}else{var technique=material.technique?this.resources.getEntry(material.technique):null;values=material.values;var description=technique.description;++description.refCount>1;var programID=description.program;this.createShaderParams(materialId,values,params,programID,description);var loadshaders=!0;loadshaders&&(materialType=Material)}values.diffuse&&"string"==typeof values.diffuse&&(params.map=CreateTexture(this.resources,values.diffuse)),values.reflective&&"string"==typeof values.reflective&&(params.envMap=CreateTexture(this.resources,values.reflective));var shininess=values.shininesss||values.shininess;shininess&&(shininess=shininess);var diffuseColor=null;params.map||(diffuseColor=values.diffuse);var opacity=1;if(values.hasOwnProperty("transparency")){var USE_A_ONE=!0;opacity=USE_A_ONE?values.transparency:1-values.transparency}return params.color=RgbArraytoHex(diffuseColor),params.opacity=opacity,params.transparent=opacity<1,params.map&&params.map.sourceFile.toLowerCase().indexOf(".png")!=-1&&(params.transparent=!0),void 0!==shininess&&(params.shininess=Math.max(shininess,1e-4)),delete params.ambient,void 0!==values.ambient&&"string"!=typeof values.ambient,void 0!==values.emission&&(params.emissive=RgbArraytoHex(values.emission)),void 0!==values.specular&&(params.specular=RgbArraytoHex(values.specular)),materialType}},handleMaterial:{value:function(entryID,description,userInfo){var params={},materialType=this.threeJSMaterialType(entryID,description,params),material=new materialType(params);return this.resources.setEntry(entryID,material,description),!0}},handleMesh:{value:function(entryID,description,userInfo){var mesh=new Mesh;this.resources.setEntry(entryID,mesh,description);var primitivesDescription=description.primitives;if(!primitivesDescription)return console.log("MISSING_PRIMITIVES for mesh:"+entryID),!1;for(var i=0;i<primitivesDescription.length;i++){var primitiveDescription=primitivesDescription[i];if(primitiveDescription.mode===WebGLRenderingContext.TRIANGLES){var geometry=new ClassicGeometry,materialEntry=this.resources.getEntry(primitiveDescription.material);mesh.addPrimitive(geometry,materialEntry.object);var allAttributes=Object.keys(primitiveDescription.attributes);allAttributes.forEach(function(semantic){geometry.totalAttributes++},this);var indices=this.resources.getEntry(primitiveDescription.indices),bufferEntry=this.resources.getEntry(indices.description.bufferView),indicesObject={bufferView:bufferEntry,byteOffset:indices.description.byteOffset,count:indices.description.count,id:indices.entryID,componentType:indices.description.componentType,type:indices.description.type},indicesContext=new IndicesContext(indicesObject,geometry),loaddata={indicesObject:indicesObject,indicesDelegate:indicesDelegate,indicesContext:indicesContext};theLoader.scheduleLoad(function(data){var alreadyProcessedIndices=THREE.GLTFLoaderUtils.getBuffer(data.indicesObject,data.indicesDelegate,data.indicesContext);alreadyProcessedIndices&&data.indicesDelegate.resourceAvailable(alreadyProcessedIndices,data.indicesContext)},loaddata),allAttributes.forEach(function(semantic){var attribute,attributeID=primitiveDescription.attributes[semantic],attributeEntry=this.resources.getEntry(attributeID);if(attributeEntry){attribute=attributeEntry.object,attribute.id=attributeID;var bufferEntry=this.resources.getEntry(attribute.bufferView)}else{attribute=description.attributes[attributeID],attribute.id=attributeID,this.resources.setEntry(attributeID,attribute,attribute);var bufferEntry=this.resources.getEntry(attribute.bufferView);attributeEntry=this.resources.getEntry(attributeID)}var attributeObject={bufferView:bufferEntry,byteOffset:attribute.byteOffset,byteStride:attribute.byteStride,count:attribute.count,max:attribute.max,min:attribute.min,componentType:attribute.componentType,type:attribute.type,id:attributeID},attribContext=new VertexAttributeContext(attributeObject,semantic,geometry),loaddata={attributeObject:attributeObject,vertexAttributeDelegate:vertexAttributeDelegate,attribContext:attribContext};theLoader.scheduleLoad(function(data){var alreadyProcessedAttribute=THREE.GLTFLoaderUtils.getBuffer(data.attributeObject,data.vertexAttributeDelegate,data.attribContext);alreadyProcessedAttribute&&data.vertexAttributeDelegate.resourceAvailable(alreadyProcessedAttribute,data.attribContext)},loaddata)},this)}}return!0}},handleCamera:{value:function(entryID,description,userInfo){var camera;if("perspective"==description.type){var znear=description.perspective.znear,zfar=description.perspective.zfar,yfov=description.perspective.yfov,xfov=description.perspective.xfov,aspect_ratio=description.perspective.aspect_ratio;aspect_ratio||(aspect_ratio=1),void 0===xfov&&yfov&&(xfov=yfov*aspect_ratio),void 0===yfov&&xfov&&(yfov=xfov/aspect_ratio),xfov&&(xfov=THREE.Math.radToDeg(xfov),camera=new THREE.PerspectiveCamera(xfov,aspect_ratio,znear,zfar))}else camera=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,znear,zfar);return camera&&this.resources.setEntry(entryID,camera,description),!0}},handleLight:{value:function(entryID,description,userInfo){var light=null,type=description.type;if(type&&description[type]){var lparams=description[type],color=RgbArraytoHex(lparams.color);switch(type){case"directional":light=new THREE.DirectionalLight(color),light.position.set(0,0,1);break;case"point":light=new THREE.PointLight(color);break;case"spot ":light=new THREE.SpotLight(color),light.position.set(0,0,1);break;case"ambient":light=new THREE.AmbientLight(color)}}return light&&this.resources.setEntry(entryID,light,description),!0}},addPendingMesh:{value:function(mesh,threeNode){theLoader.pendingMeshes.push({mesh:mesh,node:threeNode})}},handleNode:{value:function(entryID,description,userInfo){var threeNode=null;description.jointName?(threeNode=new THREE.Bone,threeNode.jointName=description.jointName,this.joints[description.jointName]=entryID):threeNode=new THREE.Object3D,threeNode.name=description.name,threeNode.glTFID=entryID,threeNode.glTF=description,this.resources.setEntry(entryID,threeNode,description);var m=description.matrix;if(m)threeNode.matrixAutoUpdate=!1,threeNode.applyMatrix((new THREE.Matrix4).set(m[0],m[4],m[8],m[12],m[1],m[5],m[9],m[13],m[2],m[6],m[10],m[14],m[3],m[7],m[11],m[15]));else{var t=description.translation,r=description.rotation,s=description.scale,position=t?new THREE.Vector3(t[0],t[1],t[2]):new THREE.Vector3,rotation=r?new THREE.Quaternion(r[0],r[1],r[2],r[3]):new THREE.Quaternion,scale=s?new THREE.Vector3(s[0],s[1],s[2]):new THREE.Vector3(1,1,1),matrix=new THREE.Matrix4;matrix.compose(position,rotation,scale),threeNode.matrixAutoUpdate=!1,threeNode.applyMatrix(matrix)}var self=this;if(description.meshes){description.meshInstances={};var skinEntry;description.skin&&(skinEntry=this.resources.getEntry(description.skin)),description.meshes.forEach(function(meshID){meshEntry=this.resources.getEntry(meshID),theLoader.meshesRequested++,meshEntry.object.onComplete(function(mesh){self.addPendingMesh(mesh,threeNode),description.meshInstances[meshID]=meshEntry.object,skinEntry&&(mesh.skin=skinEntry,description.instanceSkin=skinEntry.object),theLoader.meshesLoaded++,theLoader.checkComplete()})},this)}if(description.camera){var cameraEntry=this.resources.getEntry(description.camera);cameraEntry&&(threeNode.add(cameraEntry.object),this.cameras.push(cameraEntry.object))}if(description.extensions&&description.extensions.KHR_materials_common&&description.extensions.KHR_materials_common.light){var lightID=description.extensions.KHR_materials_common.light,lightEntry=this.resources.getEntry(lightID);lightEntry&&(threeNode.add(lightEntry.object),this.lights.push(lightEntry.object))}return!0}},handleExtension:{value:function(entryID,description,userInfo){switch(entryID){case"KHR_materials_common":var lights=description.lights;for(lightID in lights){var light=lights[lightID];this.handleLight(lightID,light)}}return!0}},buildNodeHirerachy:{value:function(nodeEntryId,parentThreeNode){var nodeEntry=this.resources.getEntry(nodeEntryId),threeNode=nodeEntry.object;parentThreeNode.add(threeNode);var children=nodeEntry.description.children;return children&&children.forEach(function(childID){this.buildNodeHirerachy(childID,threeNode)},this),threeNode}},buildSkin:{value:function(node){var glTF=node.glTF,skin=glTF.instanceSkin,skeletons=glTF.skeletons;skin&&skeletons.forEach(function(skeleton){var nodeEntry=this.resources.getEntry(skeleton);if(nodeEntry){var rootSkeleton=nodeEntry.object;node.add(rootSkeleton);var dobones=!0;for(meshID in glTF.meshInstances){var mesh=glTF.meshInstances[meshID],threeMesh=null;
mesh.primitives.forEach(function(primitive){var material=primitive.material,materialParams=material.params;material instanceof THREE.Material||(material=createShaderMaterial(material)),threeMesh=new THREE.SkinnedMesh(primitive.geometry.geometry,material,!1);primitive.geometry.geometry;if(threeMesh&&dobones){material.skinning=!0;var i,jointNames=skin.jointNames,joints=[],bones=[],boneInverses=[],len=jointNames.length;for(i=0;i<len;i++){var jointName=jointNames[i],nodeForJoint=this.joints[jointName],joint=this.resources.getEntry(nodeForJoint).object;if(joint){joint.skin=threeMesh,joints.push(joint),bones.push(joint);var m=skin.inverseBindMatrices,mat=(new THREE.Matrix4).set(m[16*i+0],m[16*i+4],m[16*i+8],m[16*i+12],m[16*i+1],m[16*i+5],m[16*i+9],m[16*i+13],m[16*i+2],m[16*i+6],m[16*i+10],m[16*i+14],m[16*i+3],m[16*i+7],m[16*i+11],m[16*i+15]);boneInverses.push(mat)}else console.log("WARNING: jointName:"+jointName+" cannot be found in skeleton:"+skeleton)}threeMesh.bind(new THREE.Skeleton(bones,boneInverses,!1),skin.bindShapeMatrix)}if(threeMesh&&(threeMesh.castShadow=!0,node.add(threeMesh),material instanceof THREE.ShaderMaterial)){materialParams.joints=joints;var glTFShader=new THREE.glTFShader(material,materialParams,threeMesh,theLoader.rootObj);THREE.glTFShaders.add(glTFShader)}},this)}}},this)}},buildSkins:{value:function(node){node.glTF&&node.glTF.instanceSkin&&this.buildSkin(node);var children=node.children;children&&children.forEach(function(child){this.buildSkins(child)},this)}},createMeshAnimations:{value:function(root){this.buildSkins(root)}},handleScene:{value:function(entryID,description,userInfo){return description.nodes?(description.nodes.forEach(function(nodeUID){this.buildNodeHirerachy(nodeUID,userInfo.rootObj)},this),this.delegate&&this.delegate.loadCompleted(userInfo.callback,userInfo.rootObj),theLoader.loadAllAssets(),!0):(console.log("ERROR: invalid file required nodes property is missing from scene"),!1)}},handleImage:{value:function(entryID,description,userInfo){return this.resources.setEntry(entryID,null,description),!0}},addNodeAnimationChannel:{value:function(name,channel,interp){this.nodeAnimationChannels||(this.nodeAnimationChannels={}),this.nodeAnimationChannels[name]||(this.nodeAnimationChannels[name]=[]),this.nodeAnimationChannels[name].push(interp)}},createAnimations:{value:function(){for(var name in this.nodeAnimationChannels){var nodeAnimationChannels=this.nodeAnimationChannels[name],anim=(nodeAnimationChannels.length,new THREE.glTFAnimation(nodeAnimationChannels));anim.name="animation_"+name,this.animations.push(anim)}}},buildAnimation:{value:function(animation){var i,interps=[],len=animation.channels.length;for(i=0;i<len;i++){var channel=animation.channels[i],sampler=animation.samplers[channel.sampler];if(sampler){var input=animation.parameters[sampler.input];if(input&&input.data){var output=animation.parameters[sampler.output];if(output&&output.data){var target=channel.target,node=this.resources.getEntry(target.id);if(node){var path=target.path,interp={keys:input.data,values:output.data,count:input.count,target:node.object,path:path,type:sampler.interpolation};this.addNodeAnimationChannel(target.id,channel,interp),interps.push(interp)}}}}}}},handleAnimation:{value:function(entryID,description,userInfo){theLoader.animationsRequested++;var animation=new Animation;animation.name=entryID,animation.onload=function(){theLoader.animationsLoaded++,theLoader.animations.push(animation),theLoader.checkComplete()},animation.channels=description.channels,animation.samplers=description.samplers,this.resources.setEntry(entryID,animation,description);var parameters=description.parameters;if(!parameters)return console.log("MISSING_PARAMETERS for animation:"+entryID),!1;var params=Object.keys(parameters);params.forEach(function(param){animation.totalParameters++},this);var params=Object.keys(parameters);return params.forEach(function(param){var parameter=parameters[param],accessor=this.resources.getEntry(parameter);accessor=accessor.object;var bufferView=this.resources.getEntry(accessor.bufferView),paramObject={bufferView:bufferView,byteOffset:accessor.byteOffset,count:accessor.count,componentType:accessor.componentType,type:accessor.type,id:accessor.bufferView,name:param},paramContext=new AnimationParameterContext(paramObject,animation),loaddata={paramObject:paramObject,animationParameterDelegate:animationParameterDelegate,paramContext:paramContext};theLoader.scheduleLoad(function(data){var alreadyProcessedAttribute=THREE.GLTFLoaderUtils.getBuffer(data.paramObject,data.animationParameterDelegate,data.paramContext);alreadyProcessedAttribute&&data.animationParameterDelegate.resourceAvailable(alreadyProcessedAttribute,data.paramContext)},loaddata)},this),!0}},handleAccessor:{value:function(entryID,description,userInfo){return this.resources.setEntry(entryID,description,description),!0}},handleSkin:{value:function(entryID,description,userInfo){var skin={},m=description.bindShapeMatrix;skin.bindShapeMatrix=(new THREE.Matrix4).set(m[0],m[4],m[8],m[12],m[1],m[5],m[9],m[13],m[2],m[6],m[10],m[14],m[3],m[7],m[11],m[15]),skin.jointNames=description.jointNames;var inverseBindMatricesDescription=this.resources.getEntry(description.inverseBindMatrices);inverseBindMatricesDescription=inverseBindMatricesDescription.description,skin.inverseBindMatricesDescription=inverseBindMatricesDescription,skin.inverseBindMatricesDescription.id=description.inverseBindMatrices;var bufferEntry=this.resources.getEntry(inverseBindMatricesDescription.bufferView),paramObject={bufferView:bufferEntry,byteOffset:inverseBindMatricesDescription.byteOffset,count:inverseBindMatricesDescription.count,componentType:inverseBindMatricesDescription.componentType,type:inverseBindMatricesDescription.type,id:inverseBindMatricesDescription.bufferView,name:skin.inverseBindMatricesDescription.id},context=new InverseBindMatricesContext(paramObject,skin),loaddata={paramObject:paramObject,inverseBindMatricesDelegate:inverseBindMatricesDelegate,context:context};theLoader.scheduleLoad(function(data){var alreadyProcessedAttribute=THREE.GLTFLoaderUtils.getBuffer(data.paramObject,data.inverseBindMatricesDelegate,data.context);alreadyProcessedAttribute&&data.inverseBindMatricesDelegate.resourceAvailable(alreadyProcessedAttribute,data.context)},loaddata);var bufferView=this.resources.getEntry(skin.inverseBindMatricesDescription.bufferView);return skin.inverseBindMatricesDescription.bufferView=bufferView.object,this.resources.setEntry(entryID,skin,description),!0}},handleSampler:{value:function(entryID,description,userInfo){return this.resources.setEntry(entryID,description,description),!0}},handleTexture:{value:function(entryID,description,userInfo){return this.resources.setEntry(entryID,null,description),!0}},handleError:{value:function(msg){throw new Error(msg)}},_delegate:{value:new LoadDelegate,writable:!0},delegate:{enumerable:!0,get:function(){return this._delegate},set:function(value){this._delegate=value}}}),Context=function(rootObj,callback){this.rootObj=rootObj,this.callback=callback},rootObj=new THREE.Object3D,self=this,loader=Object.create(ThreeGLTFLoader);return loader.initWithPath(url),loader.load(new Context(rootObj,function(obj){}),null),this.loader=loader,this.callback=callback,this.rootObj=rootObj,rootObj},THREE.glTFLoader.prototype.scheduleLoad=function(loadFn,data){this.loadRequests.push({fn:loadFn,data:data})},THREE.glTFLoader.prototype.loadAllAssets=function(){for(var i=0,len=this.loadRequests.length;i<len;i++){var request=this.loadRequests[i];request.fn(request.data)}},THREE.glTFLoader.prototype.callLoadedCallback=function(){var result={scene:this.rootObj,cameras:this.loader.cameras,animations:this.loader.animations,shaders:this.loader.shaders};this.callback(result)},THREE.glTFLoader.prototype.checkComplete=function(){if(this.meshesLoaded==this.meshesRequested&&this.shadersLoaded==this.shadersRequested&&this.animationsLoaded==this.animationsRequested){for(var i=0;i<this.pendingMeshes.length;i++){var pending=this.pendingMeshes[i];pending.mesh.attachToNode(pending.node)}for(var i=0;i<this.animationsLoaded;i++){var animation=this.animations[i];this.loader.buildAnimation(animation)}this.loader.createAnimations(),this.loader.createMeshAnimations(this.rootObj),THREE.glTFShaders.bindShaderParameters(this.rootObj),this.callLoadedCallback()}},THREE.GLTFLoaderUtils=Object.create(Object,{MISSING_DESCRIPTION:{value:"MISSING_DESCRIPTION"},INVALID_PATH:{value:"INVALID_PATH"},INVALID_TYPE:{value:"INVALID_TYPE"},XMLHTTPREQUEST_STATUS_ERROR:{value:"XMLHTTPREQUEST_STATUS_ERROR"},NOT_FOUND:{value:"NOT_FOUND"},ARRAY_BUFFER:{value:"ArrayBuffer"},_streams:{value:{},writable:!0},_streamsStatus:{value:{},writable:!0},_resources:{value:{},writable:!0},_resourcesStatus:{value:{},writable:!0},init:{value:function(){this._streams={},this._streamsStatus={},this._resources={},this._resourcesStatus={}}},_containsResource:{enumerable:!1,value:function(resourceID){return!!this._resources[resourceID]}},_storeResource:{enumerable:!1,value:function(resourceID,resource){return resourceID?(this._containsResource[resourceID]&&console.log("WARNING: resource:"+resourceID+" is already stored, overriding"),void(this._resources[resourceID]=resource)):void console.log("ERROR: entry does not contain id, cannot store")}},_getResource:{enumerable:!1,value:function(resourceID){return this._resources[resourceID]}},_loadStream:{value:function(path,type,delegate){function decodeDataUriText(isBase64,data){var result=decodeURIComponent(data);return isBase64?atob(result):result}function decodeDataUriArrayBuffer(isBase64,data){for(var byteString=decodeDataUriText(isBase64,data),buffer=new ArrayBuffer(byteString.length),view=new Uint8Array(buffer),i=0;i<byteString.length;i++)view[i]=byteString.charCodeAt(i);return buffer}function decodeDataUri(dataUriRegexResult,responseType){responseType="undefined"!=typeof responseType?responseType:"";var mimeType=dataUriRegexResult[1],isBase64=!!dataUriRegexResult[2],data=dataUriRegexResult[3];switch(responseType){case"":case"text":return decodeDataUriText(isBase64,data);case"ArrayBuffer":return decodeDataUriArrayBuffer(isBase64,data);case"blob":var buffer=decodeDataUriArrayBuffer(isBase64,data);return new Blob([buffer],{type:mimeType});case"document":var parser=new DOMParser;return parser.parseFromString(decodeDataUriText(isBase64,data),mimeType);case"json":return JSON.parse(decodeDataUriText(isBase64,data));default:throw"Unhandled responseType: "+responseType}}var dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/,dataUriRegexResult=dataUriRegex.exec(path);if(null!==dataUriRegexResult)return void delegate.streamAvailable(path,decodeDataUri(dataUriRegexResult,type));if(!type)return void delegate.handleError(THREE.GLTFLoaderUtils.INVALID_TYPE,null);if(!path)return void delegate.handleError(THREE.GLTFLoaderUtils.INVALID_PATH);var xhr=new XMLHttpRequest;xhr.open("GET",path,!0),xhr.responseType=type===this.ARRAY_BUFFER?"arraybuffer":"text",xhr.setRequestHeader("If-Modified-Since","Sat, 01 Jan 1970 00:00:00 GMT"),xhr.onload=function(e){200==xhr.status||206==xhr.status?delegate.streamAvailable(path,xhr.response):delegate.handleError(THREE.GLTFLoaderUtils.XMLHTTPREQUEST_STATUS_ERROR,this.status)},xhr.send(null)}},send:{value:0,writable:!0},requested:{value:0,writable:!0},_handleRequest:{value:function(request){var resourceStatus=this._resourcesStatus[request.id];resourceStatus?this._resourcesStatus[request.id]++:this._resourcesStatus[request.id]=1;var streamStatus=this._streamsStatus[request.uri];if(streamStatus&&"loading"===streamStatus.status)return void streamStatus.requests.push(request);this._streamsStatus[request.uri]={status:"loading",requests:[request]};var self=this,processResourceDelegate={};processResourceDelegate.streamAvailable=function(path,res_){var streamStatus=self._streamsStatus[path],requests=streamStatus.requests;requests.forEach(function(req_){var subArray=res_.slice(req_.range[0],req_.range[1]),convertedResource=req_.delegate.convert(subArray,req_.ctx);self._storeResource(req_.id,convertedResource),req_.delegate.resourceAvailable(convertedResource,req_.ctx),--self._resourcesStatus[req_.id]},this),delete self._streamsStatus[path]},processResourceDelegate.handleError=function(errorCode,info){request.delegate.handleError(errorCode,info)},this._loadStream(request.uri,request.type,processResourceDelegate)}},_elementSizeForGLType:{value:function(componentType,type){var nElements=0;switch(type){case"SCALAR":nElements=1;break;case"VEC2":nElements=2;break;case"VEC3":nElements=3;break;case"VEC4":nElements=4;break;case"MAT2":nElements=4;break;case"MAT3":nElements=9;break;case"MAT4":nElements=16}switch(componentType){case WebGLRenderingContext.FLOAT:return Float32Array.BYTES_PER_ELEMENT*nElements;case WebGLRenderingContext.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT*nElements;case WebGLRenderingContext.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT*nElements;default:return null}}},_handleWrappedBufferViewResourceLoading:{value:function(wrappedBufferView,delegate,ctx){var bufferView=wrappedBufferView.bufferView,buffer=bufferView.buffer,byteOffset=wrappedBufferView.byteOffset+bufferView.description.byteOffset,range=[byteOffset,this._elementSizeForGLType(wrappedBufferView.componentType,wrappedBufferView.type)*wrappedBufferView.count+byteOffset];this._handleRequest({id:wrappedBufferView.id,range:range,type:buffer.description.type,uri:buffer.description.uri,delegate:delegate,ctx:ctx},null)}},getBuffer:{value:function(wrappedBufferView,delegate,ctx){this._getResource(wrappedBufferView.id);return this._handleWrappedBufferViewResourceLoading(wrappedBufferView,delegate,ctx),null}},getFile:{value:function(request,delegate,ctx){return request.delegate=delegate,request.ctx=ctx,this._handleRequest({id:request.id,uri:request.uri,range:[0],type:"text",delegate:delegate,ctx:ctx},null),null}}}),THREE.glTFShaders=function(){var shaders=[];return{add:function(shader){shaders.push(shader)},remove:function(shader){var i=shaders.indexOf(shader);i!==-1&&shaders.splice(i,1)},removeAll:function(shader){shaders=[]},bindShaderParameters:function(scene){for(i=0;i<shaders.length;i++)shaders[i].bindParameters(scene)},update:function(scene,camera){for(i=0;i<shaders.length;i++)shaders[i].update(scene,camera)}}}(),THREE.glTFShader=function(material,params,object,scene){this.material=material,this.parameters=params.technique.parameters,this.uniforms=params.technique.uniforms,this.joints=params.joints,this.object=object,this.semantics={},this.m4=new THREE.Matrix4},THREE.glTFShader.prototype.bindParameters=function(scene){function findObject(o,p){o.glTFID==param.node&&(p.sourceObject=o)}for(var uniform in this.uniforms){var pname=this.uniforms[uniform],param=this.parameters[pname];if(param.semantic){var p={semantic:param.semantic,uniform:this.material.uniforms[uniform]};param.node?scene.traverse(function(o){findObject(o,p)}):p.sourceObject=this.object,this.semantics[pname]=p}}},THREE.glTFShader.prototype.update=function(scene,camera){scene.updateMatrixWorld(),camera.updateMatrixWorld(),camera.matrixWorldInverse.getInverse(camera.matrixWorld);for(var sname in this.semantics){var semantic=this.semantics[sname];if(semantic)switch(semantic.semantic){case"MODELVIEW":var m4=semantic.uniform.value;m4.multiplyMatrices(camera.matrixWorldInverse,semantic.sourceObject.matrixWorld);break;case"MODELVIEWINVERSETRANSPOSE":var m3=semantic.uniform.value;this.m4.multiplyMatrices(camera.matrixWorldInverse,semantic.sourceObject.matrixWorld),m3.getNormalMatrix(this.m4);break;case"PROJECTION":var m4=semantic.uniform.value;m4.copy(camera.projectionMatrix);break;case"JOINTMATRIX":for(var m4v=semantic.uniform.value,mi=0;mi<m4v.length;mi++)m4v[mi].getInverse(semantic.sourceObject.matrixWorld).multiply(this.joints[mi].matrixWorld).multiply(this.object.skeleton.boneInverses[mi]);break;default:throw new Error("Unhandled shader semantic"+semantic)}}};